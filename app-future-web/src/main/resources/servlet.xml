<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"
	default-autowire="byName">

	<mvc:default-servlet-handler />
	<!--<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"
				p:supportedMediaTypes="*/*" />
		</mvc:message-converters>
	</mvc:annotation-driven>-->

	<!--
	<mvc:annotation-driven conversion-service="conversionService">
	    <mvc:message-converters register-defaults="true">
	        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	            <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
	        </bean>
	        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	            <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
	        </bean>
	        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="objectMapper" ref="objectMapper"/>
        	</bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
-->
	<!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">  -->
		<!--<property name="converters">  -->
    		<!--<set>-->
	        	<!--<bean class="com.utils.CustomDateConverter"/>  -->
		    <!--</set>-->
		<!--</property> -->
	<!--</bean>-->
	
	<!--<bean id="handlerExceptionResolver" class="com.framework.springmvc.exception.resolver.AnnotationHandlerMethodExceptionResolver">
	    <property name="defaultErrorView" value="error"/> 错误页面 
	    <property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>-->
	
	<!--<bean id="handlerExceptionResolver" class="com.framework.springmvc.exception.resolver.CustomSimpleExceptionResolver">
	    <property name="defaultErrorView" value="ex/exc-view2" />
	    <property name="exceptionAttribute" value="ex" />
	    <property name="messageConverters" ref="mappingJacksonHttpMessageConverter" />
	</bean>-->

	<!--<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>-->

	<!--<mvc:annotation-driven />-->

	<!--<context:annotation-config />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />

			</list>
		</property>
	</bean>
	

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>

			</list>
		</property>
	</bean>

	--><!-- 自动扫描controller包 -->
	<context:component-scan base-package="app.future.web.handler" />

	<!--         -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!--<bean class="com.utils.CustomDateConverter"/> -->
			</set>
		</property>
	</bean>
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>
			<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
				<property name="gson">
					<bean class="org.springframework.http.converter.json.GsonFactoryBean">
						<property name="serializeNulls" value="true"/>
						<property name="disableHtmlEscaping" value="true"/>
						<property name="dateFormatPattern" value="yyyy-MM-dd HH:mm:ss:SSS" />
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<!--                 <entry key="webRoot" value="${webRoot}"></entry>   -->
				<!--                 <entry key="jsRoot" value="${jsRoot}"></entry>   -->
			</map>
		</property>
	</bean>

	<!-- spring mvc 异常处理 -->
	<bean id="exceptionResolver"
		  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
	</bean>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/freemarker/" />
		<property name="suffix" value=".ftl" />
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<!-- FreeMarker视图解析 如返回student,在这里配置后缀名ftl和视图解析器 -->
	<bean id="viewResolver"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">

		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
		<property name="cache" value="true"/>
		<property name="viewNames" value="*.ftl"/>
		<!--         <property name="prefix" value="/WEB-INF/view" /> -->
		<!--         <property name="suffix" value=".ftl" />   -->
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- 优先级 -->
		<property name="order" value="1"></property>
		<property name="requestContextAttribute" value="request" />
		<!-- 将请求和会话属性作为变量暴露给FreeMarker模板使用。要做到这一点，可以设置exposeRequestAttributes或者exposeSessionAttributes为true -->
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<!-- 使用这些宏，必须设置FreeMarkerViewResolver的exposeMacroHelpers属性为true -->
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<import resource="dubbo.xml"/>
</beans>